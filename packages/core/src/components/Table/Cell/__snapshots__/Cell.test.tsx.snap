// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cell should not render text if hide property is given 1`] = `
.c2 {
  font-size: 14px;
  font-weight: 400;
  color: inherit;
}

.c3 .c1 {
  white-space: nowrap;
}

.c4 .c1 {
  white-space: nowrap;
}

.c0 {
  opacity: 0;
  padding: 0;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  overflow: hidden;
  border-right: 1px solid #E0E0E0;
}

.c0 .c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: 0px;
}

.c0 .c6 .c5 {
  margin-right: 0px;
}

.c0 .c1 {
  white-space: nowrap;
}

<div>
  <div
    class="c0"
  >
    <span
      class="c1 c2"
    >
      Dummy
    </span>
  </div>
</div>
`;

exports[`Cell should render checkbox properly 1`] = `
.c10 {
  font-size: 16px;
  cursor: pointer;
}

.c10 * {
  fill: #616161;
}

.c3 {
  font-size: 14px;
  font-weight: 400;
  color: #616161;
  margin: 0px 0px 0px 8px;
  cursor: pointer;
}

.c4 {
  grid-area: label;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c2 {
  margin: 8px 8px 8px 0px;
  display: inline-grid;
  grid-template-columns: max-content minmax(max-content,25%);
  grid-template-areas: 'field label' 'description random';
}

.c2 .c14 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}

.c5 {
  position: relative;
  width: 16px;
  height: 16px;
  border: 1px solid #E0E0E0;
  border-radius: 15%;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5:focus-within {
  box-shadow: 0 0 0 1pt #012040;
}

.c5 > * {
  width: 100%;
  height: 100%;
  border-radius: 15%;
}

.c8 {
  z-index: 1;
  position: absolute;
  background-color: #ffffff;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 .c9 {
  width: 0;
  height: 0;
  -webkit-transition: width 0.2s ease,height 0.2s ease;
  transition: width 0.2s ease,height 0.2s ease;
}

.c6 {
  opacity: 0;
  z-index: 2;
  position: absolute;
  margin: 0;
  cursor: pointer;
}

.c6:focus {
  outline: none;
}

.c6:disabled {
  cursor: not-allowed;
}

.c6:disabled + .c7 {
  background: #E0E0E0;
}

.c6:checked + .c7 .c9 {
  width: calc(70%);
  height: calc(70%);
}

.c11 .c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: 0px;
}

.c11 .c1 .c9 {
  margin-right: 0px;
}

.c12 .c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: 0px;
}

.c12 .c1 .c9 {
  margin-right: 0px;
}

.c0 {
  opacity: 0;
  padding: 0;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  overflow: hidden;
  border-right: 1px solid #E0E0E0;
}

.c0 .c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: 0px;
}

.c0 .c1 .c9 {
  margin-right: 0px;
}

.c0 .c13 {
  white-space: nowrap;
}

<div>
  <div
    class="c0"
  >
    <div
      class="c1 c2"
      id="Dummy-checkbox"
    >
      <label
        class="c3 c4"
        for="Dummy"
      >
        Dummy
      </label>
      <div
        class="c5"
      >
        <input
          class="c6"
          id="Dummy"
          type="checkbox"
        />
        <div
          class="c7 c8"
        >
          <svg
            class="c9 c10"
            height="1em"
            viewBox="0 0 18 14"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M6 11.17L1.83 7 .41 8.41 6 14 18 2 16.59.59z"
              fill="none"
              fill-rule="evenodd"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Cell should render frozen text properly 1`] = `
.c2 {
  font-size: 14px;
  font-weight: 400;
  color: inherit;
}

.c3 .c1 {
  white-space: nowrap;
}

.c0 {
  opacity: 1;
  padding: 5px 10px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  overflow: hidden;
  border-right: 1px solid #E0E0E0;
  position: -webkit-sticky;
  position: sticky;
  left: 0;
  z-index: 2;
  background-color: inherit;
}

.c0 .c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: 0px;
}

.c0 .c5 .c4 {
  margin-right: 0px;
}

.c0 .c1 {
  white-space: nowrap;
}

.c0 * {
  z-index: 2;
}

<div>
  <div
    class="c0"
  >
    <span
      class="c1 c2"
    >
      Dummy
    </span>
  </div>
</div>
`;

exports[`Cell should render text properly 1`] = `
.c2 {
  font-size: 14px;
  font-weight: 400;
  color: inherit;
}

.c0 {
  opacity: 1;
  padding: 5px 10px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  overflow: hidden;
  border-right: 1px solid #E0E0E0;
}

.c0 .c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: 0px;
}

.c0 .c4 .c3 {
  margin-right: 0px;
}

.c0 .c1 {
  white-space: nowrap;
}

<div>
  <div
    class="c0"
  >
    <span
      class="c1 c2"
    >
      Dummy
    </span>
  </div>
</div>
`;
